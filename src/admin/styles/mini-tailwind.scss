// Helper function to escape leading digits in class names (for breakpoints like 2xl)
@function escape-leading-digit($string) {
  $first: str-slice($string, 1, 1);
  @if type-of($first) == "string" and ($first == "0" or $first == "1" or $first == "2" or $first == "3" or $first == "4" or $first == "5" or $first == "6" or $first == "7" or $first == "8" or $first == "9") {
    @return "\\3#{$first} " + str-slice($string, 2);
  }
  @return $string;
}
/*
 * Mini-Tailwind v3.4.1 | MIT License | tailwindcss.com
 * A custom build scoped to '#wpab-cb' including:
 * - Flexbox, Padding, Margin, Gap utilities
 * - Full responsive variants (sm, md, lg, xl, 2xl)
 */

// Helper function to escape dots in class names (e.g., 0.5 -> 0\.5)
@function escape-class-name($string) {
  // Only replace the first dot, since Sass doesn't support global replace
  $index: str-index($string, ".");
  @if $index {
    @return str-slice($string, 1, $index - 1) + "\\." + str-slice($string, $index + 1);
  }
  @return $string;
}

// --- Configuration Maps ---

// Standard TailwindCSS spacing scale
$spacing: (
  "0": 0px,
  "px": 1px,
  "0.5": 0.125rem,
  "1": 0.25rem,
  "1.5": 0.375rem,
  "2": 0.5rem,
  "2.5": 0.625rem,
  "3": 0.75rem,
  "3.5": 0.875rem,
  "4": 1rem,
  "5": 1.25rem,
  "6": 1.5rem,
  "7": 1.75rem,
  "8": 2rem,
  "9": 2.25rem,
  "10": 2.5rem,
  "11": 2.75rem,
  "12": 3rem,
  "14": 3.5rem,
  "16": 4rem,
  "20": 5rem,
  "24": 6rem,
  "28": 7rem,
  "32": 8rem,
  "36": 9rem,
  "40": 10rem,
  "44": 11rem,
  "48": 12rem,
  "52": 13rem,
  "56": 14rem,
  "60": 15rem,
  "64": 16rem,
  "72": 18rem,
  "80": 20rem,
  "96": 24rem,
);

// Standard TailwindCSS breakpoints
$breakpoints: (
  "sm": 640px,
  "md": 768px,
  "lg": 1024px,
  "xl": 1280px,
  "2xl": 1536px,
);

// --- Mixin to generate all utility classes ---

@mixin generate-utility-classes($prefix: "") {
  // Flexbox
  .#{$prefix}flex { display: flex; }
  .#{$prefix}inline-flex { display: inline-flex; }
  .#{$prefix}flex-row { flex-direction: row; }
  .#{$prefix}flex-row-reverse { flex-direction: row-reverse; }
  .#{$prefix}flex-col { flex-direction: column; }
  .#{$prefix}flex-col-reverse { flex-direction: column-reverse; }
  .#{$prefix}flex-wrap { flex-wrap: wrap; }
  .#{$prefix}flex-wrap-reverse { flex-wrap: wrap-reverse; }
  .#{$prefix}flex-nowrap { flex-wrap: nowrap; }
  .#{$prefix}flex-1 { flex: 1 1 0%; }
  .#{$prefix}flex-auto { flex: 1 1 auto; }
  .#{$prefix}flex-initial { flex: 0 1 auto; }
  .#{$prefix}flex-none { flex: none; }
  .#{$prefix}flex-grow { flex-grow: 1; }
  .#{$prefix}flex-grow-0 { flex-grow: 0; }
  .#{$prefix}flex-shrink { flex-shrink: 1; }
  .#{$prefix}flex-shrink-0 { flex-shrink: 0; }
  .#{$prefix}order-1 { order: 1; }
  .#{$prefix}order-2 { order: 2; }
  .#{$prefix}order-3 { order: 3; }
  .#{$prefix}order-4 { order: 4; }
  .#{$prefix}order-5 { order: 5; }
  .#{$prefix}order-6 { order: 6; }
  .#{$prefix}order-7 { order: 7; }
  .#{$prefix}order-8 { order: 8; }
  .#{$prefix}order-9 { order: 9; }
  .#{$prefix}order-10 { order: 10; }
  .#{$prefix}order-11 { order: 11; }
  .#{$prefix}order-12 { order: 12; }
  .#{$prefix}order-first { order: -9999; }
  .#{$prefix}order-last { order: 9999; }
  .#{$prefix}order-none { order: 0; }
  .#{$prefix}justify-start { justify-content: flex-start; }
  .#{$prefix}justify-end { justify-content: flex-end; }
  .#{$prefix}justify-center { justify-content: center; }
  .#{$prefix}justify-between { justify-content: space-between; }
  .#{$prefix}justify-around { justify-content: space-around; }
  .#{$prefix}justify-evenly { justify-content: space-evenly; }
  .#{$prefix}items-start { align-items: flex-start; }
  .#{$prefix}items-end { align-items: flex-end; }
  .#{$prefix}items-center { align-items: center; }
  .#{$prefix}items-baseline { align-items: baseline; }
  .#{$prefix}items-stretch { align-items: stretch; }
  .#{$prefix}self-auto { align-self: auto; }
  .#{$prefix}self-start { align-self: flex-start; }
  .#{$prefix}self-end { align-self: flex-end; }
  .#{$prefix}self-center { align-self: center; }
  .#{$prefix}self-stretch { align-self: stretch; }
  .#{$prefix}self-baseline { align-self: baseline; }
  .#{$prefix}content-center { align-content: center; }
  .#{$prefix}content-start { align-content: flex-start; }
  .#{$prefix}content-end { align-content: flex-end; }
  .#{$prefix}content-between { align-content: space-between; }
  .#{$prefix}content-around { align-content: space-around; }
  .#{$prefix}content-evenly { align-content: space-evenly; }

  // Spacing
  @each $key, $value in $spacing {
    $class-key: escape-class-name($key);
    // Padding
    .#{$prefix}p-#{$class-key} { padding: $value; }
    .#{$prefix}px-#{$class-key} { padding-left: $value; padding-right: $value; }
    .#{$prefix}py-#{$class-key} { padding-top: $value; padding-bottom: $value; }
    .#{$prefix}pt-#{$class-key} { padding-top: $value; }
    .#{$prefix}pr-#{$class-key} { padding-right: $value; }
    .#{$prefix}pb-#{$class-key} { padding-bottom: $value; }
    .#{$prefix}pl-#{$class-key} { padding-left: $value; }
    
    // Margin
    .#{$prefix}m-#{$class-key} { margin: $value; }
    .#{$prefix}mx-#{$class-key} { margin-left: $value; margin-right: $value; }
    .#{$prefix}my-#{$class-key} { margin-top: $value; margin-bottom: $value; }
    .#{$prefix}mt-#{$class-key} { margin-top: $value; }
    .#{$prefix}mr-#{$class-key} { margin-right: $value; }
    .#{$prefix}mb-#{$class-key} { margin-bottom: $value; }
    .#{$prefix}ml-#{$class-key} { margin-left: $value; }

    // Negative Margin
    @if $value != 0px {
      .#{$prefix}-m-#{$class-key} { margin: -$value; }
      .#{$prefix}-mx-#{$class-key} { margin-left: -$value; margin-right: -$value; }
      .#{$prefix}-my-#{$class-key} { margin-top: -$value; margin-bottom: -$value; }
      .#{$prefix}-mt-#{$class-key} { margin-top: -$value; }
      .#{$prefix}-mr-#{$class-key} { margin-right: -$value; }
      .#{$prefix}-mb-#{$class-key} { margin-bottom: -$value; }
      .#{$prefix}-ml-#{$class-key} { margin-left: -$value; }
    }

    // Gap
    .#{$prefix}gap-#{$class-key} { gap: $value; }
    .#{$prefix}gap-x-#{$class-key} { column-gap: $value; }
    .#{$prefix}gap-y-#{$class-key} { row-gap: $value; }

    // height
    #{$prefix}h-#{$class-key} { height: $value; }
    #{$prefix}w-#{$class-key} { width: $value; }
    
  }

  // Margin Auto
  .#{$prefix}m-auto { margin: auto; }
  .#{$prefix}mx-auto { margin-left: auto; margin-right: auto; }
  .#{$prefix}my-auto { margin-top: auto; margin-bottom: auto; }
  .#{$prefix}mt-auto { margin-top: auto; }
  .#{$prefix}mr-auto { margin-right: auto; }
  .#{$prefix}mb-auto { margin-bottom: auto; }
  .#{$prefix}ml-auto { margin-left: auto; }
}


// --- Main Generation Block ---

#wpab-cb {
  // Minimal preflight reset scoped to the container
  &, *, &::before, &::after {
    box-sizing: border-box;
  }
  
  // Generate base (mobile-first) classes
  @include generate-utility-classes();

  // Generate responsive classes inside media queries
  @each $breakpoint, $width in $breakpoints {
    @media (min-width: #{$width}) {
      @include generate-utility-classes("#{escape-leading-digit($breakpoint)}\\:");
    }
  }
}