import{_ as t,c as i,o,ag as n}from"./chunks/framework.DD2hp6gW.js";const s="/assets/settings-conflict-resolution.DoYScoxw.png",a="/assets/settings-cart-stacking.BqRO1xBg.png",f=JSON.parse('{"title":"Core Concepts: The Discount Engine & Stacking","description":"","frontmatter":{},"headers":[],"relativePath":"core-concepts/understanding-the-engine.md","filePath":"core-concepts/understanding-the-engine.md","lastUpdated":1761262741000}'),c={name:"core-concepts/understanding-the-engine.md"};function r(l,e,d,p,u,g){return o(),i("div",null,e[0]||(e[0]=[n('<h1 id="core-concepts-the-discount-engine-stacking" tabindex="-1">Core Concepts: The Discount Engine &amp; Stacking <a class="header-anchor" href="#core-concepts-the-discount-engine-stacking" aria-label="Permalink to &quot;Core Concepts: The Discount Engine &amp; Stacking&quot;">​</a></h1><p>The heart of CampaignBay is its powerful pricing engine. To get the most out of the plugin, it&#39;s essential to understand the rules it uses to calculate and prioritize discounts, especially when multiple campaigns apply to the same products.</p><p>This guide explains the different discount groups, how the engine handles conflicts, and how stacking works.</p><h2 id="the-discount-groups" tabindex="-1">The Discount Groups <a class="header-anchor" href="#the-discount-groups" aria-label="Permalink to &quot;The Discount Groups&quot;">​</a></h2><p>CampaignBay organizes discounts into distinct groups that are processed in a specific order.</p><ol><li><p><strong>Product-Level Discounts:</strong> These campaigns apply a direct price change to an individual product.</p><ul><li>Includes: <code>Scheduled Discount</code>, <code>Early Bird Discount</code>.</li></ul></li><li><p><strong>Cart-Level Discounts:</strong> These campaigns apply a discount based on the contents of the entire cart, like the quantity of items.</p><ul><li>Includes: <code>Quantity Based Discount</code>.</li></ul></li><li><p><strong>Special Discounts:</strong> These campaigns operate with their own unique logic and do not typically stack with other discounts.</p><ul><li>Includes: <code>BOGO (Buy X Get X) Discount</code>.</li></ul></li></ol><h2 id="step-1-finding-the-best-product-level-discount" tabindex="-1">Step 1: Finding the Best Product-Level Discount <a class="header-anchor" href="#step-1-finding-the-best-product-level-discount" aria-label="Permalink to &quot;Step 1: Finding the Best Product-Level Discount&quot;">​</a></h2><p>What happens if a product is eligible for both a &quot;20% Off Store-Wide&quot; (<code>Scheduled</code>) campaign and a &quot;50% Off for the first 100 sales&quot; (<code>Early Bird</code>) campaign?</p><p>The engine first finds the single best discount from the <strong>Product-Level group</strong>. This is controlled by the <strong>&quot;Handle Multiple Product Discounts&quot;</strong> setting, found in <strong>Settings → Product Settings</strong>.</p><p><img src="'+s+'" alt="Conflict Resolution Setting"></p><ul><li><p><strong>Apply Highest Discount (Default):</strong> The engine calculates the final price for all applicable <code>Scheduled</code> and <code>Early Bird</code> campaigns and applies <strong>only the one that gives the customer the biggest saving</strong>. In the example above, the 50% Early Bird discount would win.</p></li><li><p><strong>Apply Lowest Discount:</strong> The engine applies only the campaign that gives the customer the smallest saving.</p></li></ul><p>At the end of this step, the engine has determined the single &quot;best&quot; product-level discount.</p><h2 id="step-2-stacking-between-discount-groups" tabindex="-1">Step 2: Stacking Between Discount Groups <a class="header-anchor" href="#step-2-stacking-between-discount-groups" aria-label="Permalink to &quot;Step 2: Stacking Between Discount Groups&quot;">​</a></h2><p>Next, the engine decides how to handle the winning Product-Level discount and any applicable Cart-Level discounts. This is controlled by the <strong><code>Allow Stacking with Other Discount Campaigns</code></strong> setting in the <strong>Settings → Cart Settings</strong> tab.</p><p><img src="'+a+'" alt="Cart Stacking Options"></p><h4 id="if-stacking-is-off-default" tabindex="-1">If Stacking is OFF (Default) <a class="header-anchor" href="#if-stacking-is-off-default" aria-label="Permalink to &quot;If Stacking is OFF (Default)&quot;">​</a></h4><p>The system performs a final competition:</p><ul><li>It compares the winning <strong>Product-Level discount</strong> against the <strong>Cart-Level discount</strong>.</li><li>It applies <strong>only the single, overall best discount</strong> to the product. The other is ignored.</li></ul><h4 id="if-stacking-is-on" tabindex="-1">If Stacking is ON <a class="header-anchor" href="#if-stacking-is-on" aria-label="Permalink to &quot;If Stacking is ON&quot;">​</a></h4><p>Discounts are applied in a specific, layered &quot;waterfall&quot; order:</p><ol><li><strong>First, the winning Product-Level discount is applied.</strong> (The best of all <code>Scheduled</code> and <code>Early Bird</code> campaigns).</li><li><strong>Then, the Cart-Level discount is applied</strong> to the <em>new, already-discounted price</em> from the first step.</li></ol><div class="tip custom-block"><p class="custom-block-title">Stacking Example</p><p>Imagine a $100 product that qualifies for two campaigns, and stacking is <strong>ON</strong>:</p><ul><li>A <strong>Scheduled</strong> sale (Product-Level) offers 10% off.</li><li>A <strong>Quantity</strong> discount (Cart-Level) for buying 3+ offers 20% off.</li></ul><p>If a customer buys 3 of this item, the discounts will stack:</p><ol><li>The Product-Level discount is applied first: <code>$100 - 10% = $90</code>.</li><li>The Cart-Level discount is then applied to the new subtotal: <code>$90 - 20% = $72</code>.</li></ol><p>The final price per item will be <strong>$72</strong>.</p></div><h2 id="the-bogo-exception" tabindex="-1">The BOGO Exception <a class="header-anchor" href="#the-bogo-exception" aria-label="Permalink to &quot;The BOGO Exception&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><strong>BOGO (Buy X Get X)</strong> campaigns operate <strong>independently</strong> from the logic described above. They do not compete for the &quot;best discount&quot; and do not stack with Product-Level or Cart-Level campaigns.</p><p>A BOGO rule is a simple check: if the conditions are met in the cart (e.g., customer has 3 of an item for a &quot;Buy 2 Get 1 Free&quot; deal), the discount for the free item is applied.</p></div><p>Understanding these core rules will help you build complex and predictable discount strategies for your store.</p>',25)]))}const m=t(c,[["render",r]]);export{f as __pageData,m as default};
