import{_ as e,a as i}from"./chunks/settings-cart-options.NEpQnoRL.js";import{_ as o,c as n,o as a,ag as s}from"./chunks/framework.DD2hp6gW.js";const f=JSON.parse('{"title":"Core Concepts: The Discount Engine","description":"","frontmatter":{},"headers":[],"relativePath":"core-concepts/understanding-the-engine.md","filePath":"core-concepts/understanding-the-engine.md","lastUpdated":1756124449000}'),l={name:"core-concepts/understanding-the-engine.md"};function c(r,t,p,u,g,d){return a(),n("div",null,t[0]||(t[0]=[s('<h1 id="core-concepts-the-discount-engine" tabindex="-1">Core Concepts: The Discount Engine <a class="header-anchor" href="#core-concepts-the-discount-engine" aria-label="Permalink to &quot;Core Concepts: The Discount Engine&quot;">​</a></h1><p>The heart of CampaignBay is its powerful pricing engine. To get the most out of the plugin, it&#39;s helpful to understand the rules and logic it uses to apply discounts. This guide explains how the engine prioritizes campaigns and handles stacking.</p><h2 id="the-calculation-flow" tabindex="-1">The Calculation Flow <a class="header-anchor" href="#the-calculation-flow" aria-label="Permalink to &quot;The Calculation Flow&quot;">​</a></h2><p>When a customer views a product or updates their cart, the CampaignBay engine performs a series of steps in a specific order:</p><ol><li><strong>Gathers Candidates:</strong> It finds all <code>Active</code> campaigns that are applicable to a product based on its targeting rules (e.g., the product is in a targeted category).</li><li><strong>Checks Exclusions:</strong> It checks global settings, like &quot;Exclude Sale Items,&quot; to remove any campaigns that shouldn&#39;t apply.</li><li><strong>Determines the Best Discount:</strong> It evaluates all remaining &quot;candidate&quot; campaigns to find the best possible price for the customer.</li><li><strong>Applies Discounts:</strong> It applies the final calculated discounts to the products in the cart.</li></ol><h2 id="conflict-resolution-finding-the-best-discount" tabindex="-1">Conflict Resolution: Finding the Best Discount <a class="header-anchor" href="#conflict-resolution-finding-the-best-discount" aria-label="Permalink to &quot;Conflict Resolution: Finding the Best Discount&quot;">​</a></h2><p>What happens when multiple campaigns apply to the same product? For example, a &quot;10% Off All T-Shirts&quot; campaign and a &quot;20% Off Store-Wide&quot; sale.</p><p>This is controlled by the <strong>Conflict Resolution</strong> setting.</p><p><img src="'+e+'" alt="Product Exclusion &amp; Prioritization Settings"></p><ul><li><p><strong>Apply Highest Discount (Default):</strong> This is the most common setting. The engine will calculate the final price for every applicable campaign and apply only the one that gives the customer the <strong>biggest saving</strong> (i.e., the lowest final price). In the example above, the 20% store-wide discount would be applied.</p></li><li><p><strong>Apply Lowest Discount:</strong> This is a less common setting. The engine will apply only the campaign that gives the customer the <strong>smallest saving</strong>.</p></li></ul><h2 id="stacking-combining-multiple-discounts" tabindex="-1">Stacking: Combining Multiple Discounts <a class="header-anchor" href="#stacking-combining-multiple-discounts" aria-label="Permalink to &quot;Stacking: Combining Multiple Discounts&quot;">​</a></h2><p>Stacking allows you to layer different <em>types</em> of discounts on top of each other for even more powerful promotions. This is controlled by the stacking settings in the &quot;Cart Settings&quot; tab.</p><p><img src="'+i+'" alt="Cart Discount Options"></p><h3 id="_1-stacking-with-woocommerce-coupons" tabindex="-1">1. Stacking with WooCommerce Coupons <a class="header-anchor" href="#_1-stacking-with-woocommerce-coupons" aria-label="Permalink to &quot;1. Stacking with WooCommerce Coupons&quot;">​</a></h3><ul><li><strong><code>Allow Stacking with WooCommerce Coupons</code>:</strong> This setting controls the interaction with native WooCommerce coupons. <ul><li><strong>If OFF (Default):</strong> The systems are mutually exclusive. If a CampaignBay discount is active, coupons cannot be applied, and vice-versa.</li><li><strong>If ON:</strong> A customer can use a coupon code on top of a price that has already been discounted by CampaignBay.</li></ul></li></ul><h3 id="_2-stacking-campaign-types" tabindex="-1">2. Stacking Campaign Types <a class="header-anchor" href="#_2-stacking-campaign-types" aria-label="Permalink to &quot;2. Stacking Campaign Types&quot;">​</a></h3><ul><li><strong><code>Allow Stacking with Other Discount Campaigns</code>:</strong> This setting controls how different <em>types</em> of CampaignBay campaigns interact. <ul><li><strong>If OFF (Default):</strong> Only the single best discount from any applicable campaign (Scheduled, Quantity, etc.) will be applied to a product.</li><li><strong>If ON:</strong> Discounts are applied in a specific, layered order: <ol><li><strong>First, the best &quot;Simple&quot; discount is applied.</strong> The engine looks at all applicable <code>Scheduled</code> and <code>Early Bird</code> campaigns and applies the single best one.</li><li><strong>Then, a &quot;Quantity&quot; discount is applied.</strong> If a <code>Quantity</code> campaign also applies, its discount is calculated based on the <em>already discounted price</em> from the first step.</li></ol></li></ul></li></ul><div class="warning custom-block"><p class="custom-block-title">Stacking Example</p><p>Imagine a $100 product.</p><ul><li>A <strong>Scheduled</strong> sale offers 10% off (new price: $90).</li><li>A <strong>Quantity</strong> discount for buying 3+ offers 20% off.</li></ul><p>If stacking is <strong>ON</strong> and the customer buys 3, the final price will be <strong>$72</strong>. ($100 -&gt; $90 from the scheduled sale -&gt; $72 from the quantity discount applied to the $90 price).</p></div><p>Understanding these core rules will help you build complex and predictable discount strategies for your store.</p>',19)]))}const b=o(l,[["render",c]]);export{f as __pageData,b as default};
